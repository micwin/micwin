I"ƒ<p>Ich weiss ja nicht wie es euch geht, aber ich zumindest habe</p>

<ul>
  <li>WhatsApp</li>
  <li>Telegram</li>
  <li>Twitter</li>
  <li>Facebook und Messenger</li>
  <li>xing</li>
  <li>XMPP</li>
  <li>TOX</li>
  <li>LinkedIn</li>
  <li>gmail (2x)</li>
  <li>GMX</li>
  <li>ProtonMail</li>
  <li>IRC</li>
</ul>

<p>im Einsatz. Jeder dieser Chat / Messaging Clients hat seinen speziellen Vorteil und Nachteil und als freiberuflicher 
IT-Experte muss ich halt f√ºr meine Kunden auf <em>deren</em> Kanal verf√ºgbar sein. Und sind wir ehrlich - das bekommt man auch 
alles gut geregelt √ºber die Android Notifications, die eben einmal anschlagen und einmal nicht. Den Rest regelt meine<br />
t√§gliche Routine und ein konsequentes Nicht-L√∂schen von Nachrichten.</p>

<p>Richtig geh√∂rt - <em>Nicht-L√∂schen</em>. Da wos geht archiviere ich j√§hrlich aber sonst bleibt alles im Eingang liegen und 
somit jederzeit wieder auffindbar. Speicherplatz kostet  nichts, warum also aufr√§umen? Auch Aggregatoren verwende ich 
nicht, da diese aus meiner Perspektive Komplexit√§t hinzuf√ºgen und Kontrolle entfernen - warum also das Leben noch 
komplizierter machen?</p>

<p>Aber brauche ich jetzt wirklich einen neuen Messenger? Hab ich nicht schon genug?</p>

<p>Dazu muss ich ausholen. Erstens bin ich mir bewusst, dass es die perfekte Software nicht gibt; jedenfalls nicht die 
perfekte Software f√ºr <em>jeden</em>. Zweitens: F√ºr mich ist eine Chat-/Email- und Storage-Software perfekt, wenn sie 
folgende Anforderungen erf√ºllt:</p>

<ol>
  <li>Keine lokale Vorhaltung (‚Äúon premises‚Äù) von Nachrichten <em>notwendig</em> (aber m√∂glich) f√ºr die Basisfunktion (‚Äúcloud-native‚Äù)</li>
  <li>vollst√§ndig Open Source-lizensiert und nachpr√ºfbar</li>
  <li>Nachrichten und Metadaten auf allen Knoten verschl√ºsselt, sodass kein angreifbarer Schwachpunkt auf administrativer Ebene entsteht</li>
  <li>Multi-Client-Zugriff; d.h. ich habe auf meinem Android-Client denselben Chat-Verlauf wie auf meinem Desktop.</li>
  <li>mit python skriptbar; d.h. es muss m√∂glich sein, mittels python Nachrichten zu senden / zu empfangen / auszuwerten</li>
  <li>Kontrolliert von einer unabh√§ngigen Non-Profit-Organisation, bei der sich jeder beteiligen kann.</li>
  <li>die M√∂glichkeit, selbst Knoten zu installieren (‚Äúon premises‚Äù), sodass es m√∂glich ist, Chat-R√§ume nur lokal vorzuhalten.</li>
  <li>Standard-Funktionalit√§ten wie Datei-/Video-/Nachrichten-Versand, Telefonanrufe und Video-Calls sind bei jedem Client zwingend vorhanden</li>
  <li>Der Wechsel von Chatr√§umen von einem Superknoten zum anderen, oder von einem Admin zum anderen, sind leicht m√∂glich.</li>
</ol>

<p>So, und jetzt kommen wir zur ersten Liste an Produkten zur√ºck. Die meisten sind entweder zentralisiert bei einem 
Provider, oder nicht sauber E2E-verschl√ºsselt, oder nicht auf eigener Hardware installierbar, oder haben keinen 
Multi-Client-Zugriff. Jedes dieser gelisteten Tools muss entweder von sich aus Geld verdienen, oder lebt von der 
Information die damit verschickt wird, oder wird nicht richtig weiterentwickelt.</p>

<p>Und genau da kommt eben matrix.org ins Spiel. matrix.org ist die Summe der Erfahrungen, die die letzten Jahre mit 
WhatsApp, Telegram, Signal und Threema gesammelt wurden und erf√ºllt jeden der Punkte aus meiner Liste, mehr oder wenig 
gut.</p>

<p>Und darum m√∂chte ich langfrist auf matrix.org wechseln und bin ab sofort unter <a href="https://matrix.to/#/@micwin:matrix.org">@micwin:matrix.org</a> erreichbar.</p>
:ET